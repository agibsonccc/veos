Name:		@PACKAGE@
Version:	@VERSION@
Release:	@RELEASE@
Summary:	VE Operating System
Group:		System Environment/Daemons
License:	GPL
#URL:		
Source0:	@PACKAGE@-@VERSION@.tar.gz
Vendor:		NEC Corporation
BuildArch:	x86_64
BuildRequires:	libved-devel velayout-devel
BuildRequires:	protobuf-c-devel log4c-devel systemd-devel libuuid-devel
BuildRequires:	libcap-devel
BuildRequires:	procps-ng-devel
BuildRequires:	protobuf-compiler
BuildRequires:  ve-memory-mapping-devel
Requires:	libved velayout
Requires:	protobuf-c log4c systemd-libs libuuid
Requires:	libcap
Requires:	procps-ng
Requires:	protobuf-python
Requires(pre):	systemd glibc
Requires(preun):	systemd glibc

%description
VEOS is a set of daemons and commands providing operating system
functionality to VE programs.

%package	libveptrace
Summary:	VE ptrace library

%description	libveptrace
This package contains the VE ptrace library.

%package	devel
Summary:	Headers for VEOS
Requires:	%{name} = %{version}-%{release}
Requires:	%{name}-libveptrace = %{version}-%{release}

%description	devel
This package contains the files required to build system software
which uses VEOS functionality.
This package is not required to build VE programs or libraries.

%package	headers
License:	MIT
Summary:	Headers for VEOS

%description	headers
This package contains the header files of definitions of VEOS.
VE programs or libraries include them if required.

%package	musl-headers
License:	MIT
Summary:	Headers for VEOS

%description	musl-headers
This package contains the header files of definitions of VEOS.
VE programs or libraries include them if required.

%define _prefix @prefix@
%define _sysconfdir @sysconfdir@
%define _localstatedir @localstatedir@

%prep
%setup -q

%build
%configure --with-ve-musl-includedir=@ve_musl_includedir@ \
  --with-vemm-agent-includedir=@VEMM_AGENT_INCLUDEDIR@
make %{?_smp_mflags}

%install
make install DESTDIR=$RPM_BUILD_ROOT

%pre
for dev in /dev/veslot*; do
    if [ $dev == '/dev/veslot*' ]; then
        break
    fi
    sysfs_path=/sys`/usr/bin/udevadm info -q path $dev`/os_state
    os_state=`cat $sysfs_path`
    if [ $os_state != "1" ]; then
        echo "Error: OS state is not offline"
        exit 1
    fi
done

%post
/sbin/ldconfig
if [ $1 -gt 1 ] ; then
    if /usr/bin/systemctl is-active ve-ived.service >/dev/null 2>&1; then
        /usr/bin/systemctl stop ve-ived.service
        /usr/bin/systemctl start ve-ived.service
    fi
fi

%preun
for dev in /dev/veslot*; do
    if [ $dev == '/dev/veslot*' ]; then
        break
    fi
    sysfs_path=/sys`/usr/bin/udevadm info -q path $dev`/os_state
    os_state=`cat $sysfs_path`
    if [ $os_state != "1" ]; then
        echo "Error: OS state is not offline"
        exit 1
    fi
done

%postun
/sbin/ldconfig

%files
%{_libexecdir}/*
%{_libdir}/libvepseudo.so.*
%{_sbindir}/*
@ve_libexecdir@/*
@ve_bindir@/*
%config %{_sysconfdir}/log4crc
@ve_os_launcher_confdir@/ve-ived.options
@ve_os_launcher_confdir@/veos_timer.options
%{_prefix}/lib/python2.7/site-packages/*
%{_prefix}/lib/python2.7/site-packages/*/*
%doc

%files libveptrace
%{_libdir}/libveptrace.so.*

%files devel
%doc
%{_includedir}/*.h
%{_libdir}/*.a
%{_libdir}/*.la
%{_libdir}/*.so

%files headers
@ve_includedir@/*.h

%files musl-headers
@ve_musl_includedir@/*.h
